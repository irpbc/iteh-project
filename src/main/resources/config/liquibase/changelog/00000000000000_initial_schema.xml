<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <property name="now" value="now()" dbms="mysql"/>

    <!--
        JHipster core tables.
        The initial schema has the '00000000000001' id, so that it is over-written if we re-generate it.
    -->
    <changeSet id="00000000000001" author="ivan">
        <sql>
            CREATE TABLE user (
                id BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT,
                created_at TIMESTAMP NOT NULL DEFAULT current_timestamp,
                updated_at TIMESTAMP NOT NULL DEFAULT current_timestamp,
                created_by BIGINT NOT NULL,
                updated_by BIGINT NOT NULL,

                login VARCHAR(100) UNIQUE NOT NULL,
                password_hash VARCHAR(60) NOT NULL,
                first_name VARCHAR(100) NOT NULL,
                last_name VARCHAR(100) NOT NULL,
                email VARCHAR(100) UNIQUE NOT NULL,
                image_url VARCHAR(255),
                activated BOOL NOT NULL DEFAULT FALSE,
                lang_key VARCHAR(6),
                activation_key VARCHAR(20),
                reset_key VARCHAR(20),
                reset_date TIMESTAMP,

                FOREIGN KEY fk_user_created_by (created_by) REFERENCES user(id),
                FOREIGN KEY fk_user_updated_by (updated_by) REFERENCES user(id),

                UNIQUE INDEX idx_user_login (login),
                UNIQUE INDEX idx_user_email (email)
            );
        </sql>

        <sql>
            CREATE TABLE authority (
                name VARCHAR(50) PRIMARY KEY NOT NULL
            );

            CREATE TABLE user_authority (
                user_id BIGINT NOT NULL,
                authority_name VARCHAR(50) NOT NULL,

                PRIMARY KEY pk_user_authority (user_id, authority_name),
                FOREIGN KEY fk_ua_user (user_id) REFERENCES user(id),
                FOREIGN KEY fk_ua_authority (authority_name) REFERENCES authority(name)
            );
        </sql>


        <loadData tableName="user" file="config/liquibase/users.csv"
                  encoding="UTF-8" separator=";">
            <column name="activated" type="boolean"/>
            <column name="created_at" type="timestamp"/>
        </loadData>

        <dropDefaultValue tableName="user" columnName="created_at"/>
        <dropDefaultValue tableName="user" columnName="updated_at"/>

        <loadData tableName="authority" file="config/liquibase/authorities.csv"
                  encoding="UTF-8" separator=";"/>

        <loadData tableName="user_authority" file="config/liquibase/users_authorities.csv"
                  encoding="UTF-8" separator=";"/>

        <sql>
            CREATE TABLE persistent_audit_event (
                id BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT,
                user_id BIGINT NOT NULL,
                type VARCHAR(255),
                date TIMESTAMP,

                INDEX idx_pers_aud_evt_dat (user_id, date)
            );

            CREATE TABLE persistent_audit_evt_data (
                event_id BIGINT NOT NULL,
                name VARCHAR(150),
                value VARCHAR(255),

                PRIMARY KEY pk_pers_aud_evt_dat (event_id, name),
                FOREIGN KEY fk_pers_aud_evt_dat_evtid (event_id)
                REFERENCES persistent_audit_event(id),
                INDEX idx_pers_aud_evt_dat_evtid (event_id)
            );
        </sql>

        <!-- Social -->
        <sql>
            CREATE TABLE social_user_connection (
                id BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT,

                user_id BIGINT NOT NULL,
                provider_id VARCHAR(255) NOT NULL,
                provider_user_id VARCHAR(255) NOT NULL,
                rank BIGINT NOT NULL,
                display_name VARCHAR(255),
                profile_url VARCHAR(255),
                image_url VARCHAR(255),
                access_token VARCHAR(255) NOT NULL,
                secret VARCHAR(255),
                refresh_token VARCHAR(255),
                expire_time BIGINT,

                CONSTRAINT unique_social UNIQUE (user_id, provider_id, provider_user_id),
                CONSTRAINT unique_social_rank UNIQUE (user_id, provider_id, rank)
            )
        </sql>

    </changeSet>
</databaseChangeLog>
